name: Build Android (from PWA zip)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK (cli)
        run: |
          set -e
          ANDROID_SDK_ROOT=$HOME/android-sdk
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sSL -o tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          rm -f tools.zip
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses >/dev/null || true
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

      - name: Unzip Android project from PWA Builder
        run: |
          mkdir -p android_src
          unzip -q Plutoo.zip -d android_src
          INNER=$(find android_src -type f -name gradlew -printf '%h\n' | head -n1)
          if [ -z "$INNER" ]; then
            echo "gradlew non trovato nello zip"; exit 1
          fi
          echo "ANDROID_PROJECT=$INNER" >> $GITHUB_ENV
          chmod +x "$INNER/gradlew"

      - name: Build debug APK
        run: |
          cd "$ANDROID_PROJECT"
          ./gradlew --no-daemon assembleDebug
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: plutoo-debug-apk
          path: ${{ env.ANDROID_PROJECT }}/app/build/outputs/apk/debug/*.apk
